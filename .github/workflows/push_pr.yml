name: Push/PR pipelien

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  TAG: ${{ github.event.release.tag_name }}

jobs:

  validate:
    name: Validate code via linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Validate code
        run: make ci/validate

  test-nix:
    name: Run unit tests on nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Unit tests
        run: make ci/test

  test-windows:
    runs-on: windows-2019
    env:
      GOPATH: ${{ github.workspace }}
    defaults:
      run:
        working-directory: src/github.com/newrelic/nri-redis
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: src/github.com/newrelic/nri-redis
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.9.7'
      - name: Running unit tests
        shell: pwsh
        run: |
          .\build\windows\package_msi.ps1 -installer

  # can't run this step inside of container because of tests specific
  test-integration-nix:
    name: Run integration tests on nix
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/github.com/${{ github.event.repository.full_name }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: src/github.com/${{ github.event.repository.full_name }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.9.7'
      - name: Integration test
        env:
          GOPATH: "${{ github.workspace }}"
        run: make integration-test

  build:
    name: Build binary for all platforms:arch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build all platforms:arch
        run: make ci/build

  snyk:
    name: Run security checks via snyk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

